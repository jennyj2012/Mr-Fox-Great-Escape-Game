{\rtf1\ansi\ansicpg1252\cocoartf1265\cocoasubrtf210
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww12400\viewh8400\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs24 \cf0 //FOX DESIGN & METHODS\uc0\u8232 //\u8232 //Cindy Juarez and Jenny Juarez\u8232 //3.9.10\u8232 //The Fox Game\u8232 //Design and Methods for the Fox\u8232 \u8232 class Fox\{\u8232     float xf = 20; //inital position of fox on x axis\u8232     float yf = (7*height/8)-30; //initial position of fox on y axis\u8232     float vyf = 30; //speed of fox on y axis\u8232     float vxf = 30; //speed of fox on x axis\u8232     float gf = .98/2; // half of gravity - speed at which fox falls\u8232     boolean onCliff=true;\u8232     boolean onRock=false;\u8232     boolean onBalloon=false;\u8232     int wins = 0;\u8232 \u8232     Fox() \{\}\u8232 \u8232     //Draw Fox\u8232     void foxDraw()\{\u8232         pushMatrix();\u8232         noStroke();\u8232         fill(255,153,0);\u8232         beginShape();\u8232         translate(xf,yf);\u8232         ellipse(20,10,36,18); //main body\u8232         rotate(PI/4);\u8232         ellipse(-5,0,26,13); //tail\u8232         beginShape();\u8232         fill(255); //white tail\u8232         vertex(-8,-6.5);\u8232         bezierVertex(-25,-6.5,-25,6.5,-8,6.5);\u8232         endShape();\u8232         beginShape();\u8232         fill(255,153,0);\u8232         ellipse(15,-25,20,10); //ear\u8232         rotate(3*PI/4);\u8232         endShape();\u8232         fill(255,153,0);\u8232         ellipse(-35,4,17.5,17.5); //head\u8232         ellipse(-43,4,15,8.5); //muzzle\u8232         fill(255);\u8232         ellipse(-35,6,5,5); //white eye\u8232         fill(0);\u8232         ellipse(-50,4,5,5); //nose\u8232         ellipse(-37,6,3,3); //eyeball\u8232         fill(255);\u8232         beginShape(); //white chest\u8232         vertex(-35,-5);\u8232         bezierVertex(-38,-8,-38,-14,-35,-15);\u8232         endShape();\u8232         fill(255); //white ear\u8232         triangle(-23.5,7,-27,12,-22,13);\u8232         endShape();\u8232         popMatrix();\u8232     \u8232         pushMatrix();\u8232         beginShape(); //front leg\u8232         translate(xf,yf);\u8232         fill(255,153,0);\u8232         ellipse(30,20,10,15);\u8232         fill(255);\u8232         vertex(25,25);\u8232         bezierVertex(26,30,34,30,35,25);\u8232         endShape();\u8232         popMatrix();\u8232     \u8232         pushMatrix();\u8232         beginShape(); //back leg\u8232         translate(xf,yf);\u8232         fill(255,153,0);\u8232         ellipse(10,20,10,15);\u8232         fill(255);\u8232         vertex(5,25);\u8232         bezierVertex(6,30,14,30,15,25);\u8232         endShape();\u8232         popMatrix();\u8232     \}\u8232     \u8232     //check if fox on rock\u8232     void rockCheck()\{\u8232         for(int i = 0;i < rocks.length;i++)\{\u8232             float a = abs(dist(xf,yf,rocks[i].x,yf));\u8232             float b = abs(dist(xf,yf,xf,rocks[i].y));\u8232             if(a <= 40 && b <= 40 && (rocks[i].x > 0))\{\u8232                 onRock = true;\u8232                 vyf = 0;\u8232                 yf = (rocks[i].y)-30; //if fox is on rock center it on the y-axis\u8232             \}\u8232             else onRock = false;\u8232         \}\u8232     \}\u8232     \u8232     //check if fox on balloon\u8232     void balloonCheck()\{\u8232         float bx = abs(dist(xf,yf,balloon.x-25,yf));\u8232         float basket = balloon.y + balloon.d-15;\u8232         float by = abs(dist(xf,yf,xf,(basket)));\u8232         if(bx <= 40 && by <= 15)\{\u8232             onBalloon = true;\u8232             vyf = 0;\u8232             yf = basket;\u8232             xf = balloon.x-20;\u8232             wins = 1;\u8232         \}\u8232         else onBalloon = false;\u8232     \}\u8232     \u8232     //check if fox is on cliff\u8232     void cliffCheck()\{\u8232         if (fox.xf+5 <= (cliff.x + 100) && fox.yf+30 >= cliff.y)\{\u8232             onCliff = true;\u8232             yf = cliff.cliffFoxY; //if fox is on cliff, center it on the y-axis\u8232             println(yf);\u8232         \}\u8232         else onCliff = false;\u8232     \}\u8232     \u8232     //if fox is not on an object, then let fox fall\u8232     void foxUpdate()\{\u8232         cliffCheck();\u8232         balloonCheck();\u8232         rockCheck();\u8232         if( !onBalloon && !onCliff && !onRock)\{\u8232             vyf += gf;\u8232             yf += vyf;\u8232         \}\u8232     \u8232         //restart if falls off window\u8232         if(yf >= (height+500))\{ //delay by extra falling\u8232             xf = 20;\u8232             yf = (7*height/8)-30;\u8232         \}\u8232     \}\u8232     \u8232     //move fox\u8232     void keypressed()\{\u8232         xf = constrain(xf,65,width-105);\u8232         yf = constrain(yf,65,height+500);\u8232         \u8232         //move forward\u8232         if(key == '.')\{\u8232             xf+=vxf;\u8232         \}\u8232         //move back\u8232         if(key == ',')\{\u8232             xf-=vxf;\u8232         \}\u8232         //jump\u8232         if(key == ' ')\{\u8232             yf -= 150;\u8232         \}\u8232     \}\u8232 \}\
}